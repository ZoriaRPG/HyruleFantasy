void SwordWeaponStab(ffc f, lweapon l, int origtile, int delay, int offset, int level, int enemydefense, int aspeed){
	l->CollDetection=true;
	int Wdir = Link->Dir;
	l->Dir=Wdir;
	if (LweaponFlagIsSet(l, LWF_IGNORE_ENEMY_SHIELDS)) l->Dir = GetUnblockableDir(Wdir);
	LweaponSetFlag(l, LWF_MELEE);	
	LweaponSetFlag(l, LWF_PENETRATING);
	LweaponSetFlag(l, LWF_NO_FALL);
	LweaponSetFlag(l, LWF_MOVE_OFFSCREEN);
	SetEnemyDefense(l, enemydefense);
	int OrigHitboxData[4];
	GetLweaponHitboxOffsets(l, OrigHitboxData);
	for (int i = 0; i<aspeed; i++){
	MeleeWeaponUpdate (l, Wdir, origtile, (offset/2), false);
	MeleeWeaponHitboxUpdate(l, Wdir,OrigHitboxData);
	ChangeToNextOnCollision(l, 141, -1, 41);
	ChangeToNextOnCollision(l, 129, -1, 0);
	ChangeToNextOnCollision(l, 137, -1, 0);
	ChangeToNextOnCollision(l, 130, -1, 0);
	ChangeToNextOnCollision(l, 138, -1, 0);
	ChangeToNextOnCollision(l, 131, -1, 41);
	ChangeToNextOnCollision(l, 139, -1, 41);
	DestroyCombosOnCollision(l, 56, 41);
	DestroyCombosOnCollision(l, 135, 41);
	DestroyCombosOnCollision(l, 55, 41);
	DestroyCombosOnCollision(l, 134, 41);
	DestroyCombosOnCollision(l, 56, 41);
	DestroyCombosOnCollision(l, 57, 41);
	DestroyCombosOnCollision(l, 136, 41);
	DestroyCombosOnCollision(l, 24, 41);
	DestroyCombosOnCollision(l, 132, 41);
	DestroyCombosOnCollision(l, 25, 41);
	DestroyCombosOnCollision(l, 133, 41);
	if(level>3)TriggerUpdate (l, 82, SFX_SECRET, true);
	if(level>2)TriggerUpdate (l, 81, SFX_SECRET, true);
	if(level>1)TriggerUpdate (l, 80, SFX_SECRET, true);
	TriggerUpdate (l, 79, SFX_SECRET, true);
	//UseEnemyDefense(l, 0, enemydefense);
	LweaponWaitframe (f, l, true);
	}
	for (int i = 0; i<delay; i++){
	MeleeWeaponUpdate (l, Wdir, origtile, offset, false);
	MeleeWeaponHitboxUpdate(l, Wdir,OrigHitboxData);
	ChangeToNextOnCollision(l, 141, -1, 41);
	ChangeToNextOnCollision(l, 129, -1, 0);
	ChangeToNextOnCollision(l, 137, -1, 0);
	ChangeToNextOnCollision(l, 130, -1, 0);
	ChangeToNextOnCollision(l, 138, -1, 0);
	ChangeToNextOnCollision(l, 131, -1, 41);
	ChangeToNextOnCollision(l, 139, -1, 41);
	DestroyCombosOnCollision(l, 56, 41);
	DestroyCombosOnCollision(l, 135, 41);
	DestroyCombosOnCollision(l, 55, 41);
	DestroyCombosOnCollision(l, 134, 41);
	DestroyCombosOnCollision(l, 56, 41);
	DestroyCombosOnCollision(l, 57, 41);
	DestroyCombosOnCollision(l, 136, 41);
	DestroyCombosOnCollision(l, 24, 41);
	DestroyCombosOnCollision(l, 132, 41);
	DestroyCombosOnCollision(l, 25, 41);
	DestroyCombosOnCollision(l, 133, 41);
	if(level>3)TriggerUpdate (l, 82, SFX_SECRET, true);
	if(level>2)TriggerUpdate (l, 81, SFX_SECRET, true);
	if(level>1)TriggerUpdate (l, 80, SFX_SECRET, true);
	TriggerUpdate (l, 79, SFX_SECRET, true);
	//UseEnemyDefense(l, 0, enemydefense);
	LweaponWaitframe (f, l, true);
	}
}

void SwordWeaponSlashZ3(ffc f, lweapon l, int origtile, int delay, int offset, int level, int enemydefense, int aspeed){
	l->CollDetection=true;
	int TileOffset = l->TileWidth;
	LweaponSetFlag(l, LWF_MELEE);
	LweaponSetFlag(l, LWF_PENETRATING);
	LweaponSetFlag(l, LWF_NO_FALL);
	SetEnemyDefense(l, enemydefense);
	int OrigHitboxData[4];
	GetLweaponHitboxOffsets(l, OrigHitboxData);
	int Wdir = Link->Dir;
	l->Dir=Wdir;
	if (LweaponFlagIsSet(l, LWF_IGNORE_ENEMY_SHIELDS)) l->Dir = GetUnblockableDir(Wdir);
	Wdir = CWDir4Way(Link->Dir);
	Wdir = CCWDir8Way(Wdir);
	for (int i = 0; i<aspeed; i++){
	MeleeWeaponUpdate (l, Wdir, origtile+TileOffset, (offset-4), false);
	MeleeWeaponHitboxUpdate(l, Wdir,OrigHitboxData);
	ChangeToNextOnCollision(l, 141, -1, 41);
	ChangeToNextOnCollision(l, 129, -1, 0);
	ChangeToNextOnCollision(l, 137, -1, 0);
	ChangeToNextOnCollision(l, 130, -1, 0);
	ChangeToNextOnCollision(l, 138, -1, 0);
	ChangeToNextOnCollision(l, 131, -1, 41);
	ChangeToNextOnCollision(l, 139, -1, 41);
	DestroyCombosOnCollision(l, 56, 41);
	DestroyCombosOnCollision(l, 135, 41);
	DestroyCombosOnCollision(l, 55, 41);
	DestroyCombosOnCollision(l, 134, 41);
	DestroyCombosOnCollision(l, 56, 41);
	DestroyCombosOnCollision(l, 57, 41);
	DestroyCombosOnCollision(l, 136, 41);
	DestroyCombosOnCollision(l, 24, 41);
	DestroyCombosOnCollision(l, 132, 41);
	DestroyCombosOnCollision(l, 25, 41);
	DestroyCombosOnCollision(l, 133, 41);
	if(level>3)TriggerUpdate (l, 82, SFX_SECRET, true);
	if(level>2)TriggerUpdate (l, 81, SFX_SECRET, true);
	if(level>1)TriggerUpdate (l, 80, SFX_SECRET, true);
	TriggerUpdate (l, 79, SFX_SECRET, true);
	//UseEnemyDefense(l, 0, enemydefense);
	LweaponWaitframe (f, l, true);
	}
	Wdir = CCWDir8Way(Wdir);
	for (int i = 0; i<aspeed; i++){
	MeleeWeaponUpdate (l, Wdir, origtile, offset, false);
	MeleeWeaponHitboxUpdate(l, Wdir,OrigHitboxData);
	ChangeToNextOnCollision(l, 141, -1, 41);
	ChangeToNextOnCollision(l, 129, -1, 0);
	ChangeToNextOnCollision(l, 137, -1, 0);
	ChangeToNextOnCollision(l, 130, -1, 0);
	ChangeToNextOnCollision(l, 138, -1, 0);
	ChangeToNextOnCollision(l, 131, -1, 41);
	ChangeToNextOnCollision(l, 139, -1, 41);
	DestroyCombosOnCollision(l, 56, 41);
	DestroyCombosOnCollision(l, 135, 41);
	DestroyCombosOnCollision(l, 55, 41);
	DestroyCombosOnCollision(l, 134, 41);
	DestroyCombosOnCollision(l, 56, 41);
	DestroyCombosOnCollision(l, 57, 41);
	DestroyCombosOnCollision(l, 136, 41);
	DestroyCombosOnCollision(l, 24, 41);
	DestroyCombosOnCollision(l, 132, 41);
	DestroyCombosOnCollision(l, 25, 41);
	DestroyCombosOnCollision(l, 133, 41);
	if(level>3)TriggerUpdate (l, 82, SFX_SECRET, true);
	if(level>2)TriggerUpdate (l, 81, SFX_SECRET, true);
	if(level>1)TriggerUpdate (l, 80, SFX_SECRET, true);
	TriggerUpdate (l, 79, SFX_SECRET, true);
	//UseEnemyDefense(l, 0, enemydefense);
	LweaponWaitframe (f, l, true);
	}
	Wdir = CCWDir8Way(Wdir);
	for (int i = 0; i<aspeed; i++){
	MeleeWeaponUpdate (l, Wdir, origtile+TileOffset, (offset-4), false);
	MeleeWeaponHitboxUpdate(l, Wdir,OrigHitboxData);
	ChangeToNextOnCollision(l, 141, -1, 41);
	ChangeToNextOnCollision(l, 129, -1, 0);
	ChangeToNextOnCollision(l, 137, -1, 0);
	ChangeToNextOnCollision(l, 130, -1, 0);
	ChangeToNextOnCollision(l, 138, -1, 0);
	ChangeToNextOnCollision(l, 131, -1, 41);
	ChangeToNextOnCollision(l, 139, -1, 41);
	DestroyCombosOnCollision(l, 56, 41);
	DestroyCombosOnCollision(l, 135, 41);
	DestroyCombosOnCollision(l, 55, 41);
	DestroyCombosOnCollision(l, 134, 41);
	DestroyCombosOnCollision(l, 56, 41);
	DestroyCombosOnCollision(l, 57, 41);
	DestroyCombosOnCollision(l, 136, 41);
	DestroyCombosOnCollision(l, 24, 41);
	DestroyCombosOnCollision(l, 132, 41);
	DestroyCombosOnCollision(l, 25, 41);
	DestroyCombosOnCollision(l, 133, 41);
	if(level>3)TriggerUpdate (l, 82, SFX_SECRET, true);
	if(level>2)TriggerUpdate (l, 81, SFX_SECRET, true);
	if(level>1)TriggerUpdate (l, 80, SFX_SECRET, true);
	TriggerUpdate (l, 79, SFX_SECRET, true);
	//UseEnemyDefense(l, 0, enemydefense);
	LweaponWaitframe (f, l, true);
	}
}